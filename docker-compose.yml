version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ai-chat-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      # REMOVE the line below to prevent postgres from creating a non-existent database.
      - POSTGRES_DB=${DB_NAME:-aichat}
    ports:
      - '${DB_PORT:-5432}:5432'
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: ai-chat-grafana
  #   restart: unless-stopped
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
  #     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #   ports:
  #     - '${GRAFANA_PORT:-3001}:3000'
  #   depends_on:
  #     - postgres

  prometheus:
    image: prom/prometheus:latest
    container_name: ai-chat-prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

volumes:
  postgres_data:
  # grafana_data:
  prometheus_data:
