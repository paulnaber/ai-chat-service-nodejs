{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"NewMessage": {
				"properties": {
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"senderType": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"chatId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"content": {
						"type": "string"
					}
				},
				"required": [
					"chatId",
					"userId",
					"content"
				],
				"type": "object"
			},
			"NewChat": {
				"properties": {
					"lastActiveDate": {
						"type": "string",
						"format": "date-time"
					},
					"title": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"userId"
				],
				"type": "object"
			},
			"ValidateErrorJSON": {
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"Validation failed"
						],
						"nullable": false
					},
					"details": {
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					}
				},
				"required": [
					"message",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"BearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "string"
			}
		}
	},
	"info": {
		"title": "AI Chat API",
		"version": "1.0.0",
		"description": "AI Chat API",
		"contact": {
			"name": "Paul Naber",
			"email": "paul.naber@inside-m2m.de"
		}
	},
	"paths": {
		"/openapi": {
			"get": {
				"operationId": "GetOpenapi",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Get OpenAPI definition",
				"tags": [
					"Openapi"
				],
				"security": [],
				"parameters": []
			}
		},
		"/v1/chats/{chatId}/messages": {
			"get": {
				"operationId": "GetMessages",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/NewMessage"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Returns an array of messages for the specified chat. User identity (email) is extracted from JWT token.",
				"summary": "Get all messages for a chat",
				"tags": [
					"Messages"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "chatId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NewMessage"
								}
							}
						}
					}
				},
				"description": "Creates a new message in a specific chat. User identity (email) is extracted from JWT token.",
				"summary": "Create a new message",
				"tags": [
					"Messages"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "chatId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"content": {
										"type": "string"
									}
								},
								"required": [
									"content"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/v1/chats": {
			"get": {
				"operationId": "GetChats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/NewChat"
									},
									"type": "array"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Returns an array of chats owned by the user. User identity (email) is extracted from JWT token.",
				"summary": "Get all chats for a user",
				"tags": [
					"Chats"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateChat",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NewChat"
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"description": "Creates a new chat with the initial message content. User identity (email) is extracted from JWT token.",
				"summary": "Create a new chat",
				"tags": [
					"Chats"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"content": {
										"type": "string"
									}
								},
								"required": [
									"content"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}